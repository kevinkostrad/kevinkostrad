name: RDP_FINAL

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Setup Ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip
        .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Configure RDP
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
        Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)
        Set-ItemProperty -Path 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services' -Name 'MaxIdleTime' -Value 0
        Set-ItemProperty -Path 'HKLM:\Software\Policies\Microsoft\Windows NT\Terminal Services' -Name 'MaxDisconnectionTime' -Value 0

    - name: Start Ngrok and Prevent Idle
      run: |
        $restartInterval = 21600  # 6 Jam
        $idleInterval = 300       # 5 Menit

        while ($true) {
          Write-Output "Starting ngrok tunnel at $(Get-Date)"
          $ngrokProcess = Start-Process -NoNewWindow -FilePath .\ngrok\ngrok.exe -ArgumentList "tcp 3389 --region=ap" -RedirectStandardOutput ngrok.log -RedirectStandardError ngrok_error.log -PassThru

          $elapsedTime = 0
          while ($ngrokProcess.HasExited -eq $false -and $elapsedTime -lt $restartInterval) {
            Write-Output "RDP is active at $(Get-Date)"
            Start-Sleep -Seconds $idleInterval
            $elapsedTime += $idleInterval
          }

          if ($ngrokProcess.HasExited -eq $false) {
            Stop-Process -Id $ngrokProcess.Id -Force
            Write-Output "Ngrok process stopped for restart."
          }
        }
